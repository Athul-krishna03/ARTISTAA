<%- include("../partials/user/header") %>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .container {
            width: 80%;
            max-width: 1200px;
            margin: 30px auto;
            padding: 40px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 2.5rem;
            color: #333;
            text-align: center;
            margin-bottom: 40px;
            font-weight: 500;
        }

        .wishlist-item {
            display: flex;
            align-items: center;
            border-bottom: 1px solid #e1e1e1;
            padding: 20px 0;
            transition: transform 0.3s ease-in-out;
        }

        .wishlist-item:hover {
            transform: scale(1.02);
        }

        .wishlist-item img {
            width: 120px;
            height: 120px;
            border-radius: 8px;
            object-fit: cover;
            margin-right: 25px;
            transition: transform 0.3s;
        }

        .wishlist-item img:hover {
            transform: scale(1.05);
        }

        .item-details {
            flex-grow: 1;
        }

        .item-details h4 {
            font-size: 1.3rem;
            color: #444;
            margin-bottom: 10px;
        }

        .item-details p {
            color: #777;
            font-size: 0.95rem;
            margin: 8px 0;
            line-height: 1.5;
        }

        .item-details .price {
            font-weight: bold;
            color: #333;
            margin-top: 10px;
            font-size: 1.1rem;
        }

        .item-actions {
            display: flex;
            flex-direction: column;
            gap: 12px;
            align-items: flex-start;
        }

        .btn {
            padding: 10px 18px;
            border: none;
            cursor: pointer;
            border-radius: 6px;
            font-size: 1rem;
            transition: background-color 0.3s, transform 0.2s;
        }

        .btn-add-to-cart {
            background-color: #5cb85c;
            color: white;
            width: 150px;
        }

        .btn-add-to-cart:hover {
            background-color: #4cae4c;
            transform: translateY(-2px);
        }

        .btn-remove {
            background-color: #d9534f;
            color: white;
            width: 150px;
        }

        .btn-remove:hover {
            background-color: #c9302c;
            transform: translateY(-2px);
        }

        .empty-wishlist {
            text-align: center;
            padding: 80px 0;
            color: #999;
            font-size: 1.2rem;
        }

        .wishlist-item {
            border-bottom: none;
        }
    </style>

    <body>

        <main>
            <div class="container">
                <h1>Your Wishlist</h1>

                <% if (wishlistItems.products && wishlistItems.products.length > 0) { %>
                    <% wishlistItems.products.forEach(item => { %>
                        <% const imgSrc=item.productId.productImage[0]?.startsWith('http') ? item.productId.productImage[0]
                        : '/uploads/re-image/' + item.productId.productImage[0]; %>
                        <div class="wishlist-item">
                            <img src="<%= imgSrc  %>"
                                alt="<%= item.productId.productName %>">
                            <div class="item-details">
                                <h4>
                                    <%= item.productId.productName %>
                                </h4>
                                <p>
                                    <%= item.productId.description %>
                                </p>
                                <div class="price">â‚¹<%= item.productId.salePrice %>
                                </div>
                            </div>
                            <div class="item-actions">
                                <button class="btn btn-add-to-cart" onclick="addToCart('<%= item.productId._id %>')">Add to Cart</button>
                                <button class="btn btn-remove" onclick="removeFromWishlist('<%= item.productId._id %>')">Remove</button>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="empty-wishlist">
                        <p>Your wishlist is empty. Start adding items you love!</p>
                    </div>
                <% } %>
            </div>
        </main>

        <script>
            async function addToCart(itemId) {
                console.log(itemId)
                try {
                    const response = await fetch(`/addCart?productId=${itemId}&quantity=1`, {
                        method: 'get',
                        headers: {
                            "Accept": "application/json",
                            'Content-Type': 'application/json'
                        },
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            text: 'Item added to cart successfully.',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed to Add',
                            text:  'Product limit exceeded.',
                        });
                    }
                } catch (error) {
                    console.error("Error adding item to cart:", error);
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: 'Error',
                        text: error.message||'An error occurred while adding the item to the cart.',
                    });
                }
            }

            async function removeFromWishlist(itemId) {
                try {
                    const response = await fetch('/removeWishlist', {
                        method: 'POST',
                        headers: {
                            "Accept": "application/json",
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId: itemId })
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Removed from Wishlist!',
                            text: 'Item removed from wishlist successfully.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload(); 
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed to Remove',
                            text: result.message || 'Failed to remove item from wishlist.',
                        });
                    }
                } catch (error) {
                    console.error("Error removing item from wishlist:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while removing the item from the wishlist.',
                    });
                }
            }
        </script>
    </body>

    </html>

    <%- include("../partials/user/footer") %>
